name: CI & Publish

on:
  push:
    branches: [main, master]
    tags: ['v*']     # push tag v0.1 -> image :v0.1 and MODEL_VERSION=v0.1
  pull_request:

permissions:
  contents: read
  packages: write

jobs:
  build-test-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install & Test
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt pytest
          python src/train.py
          PYTHONPATH=$(pwd) pytest -q

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta (tags/labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ format('ghcr.io/{0}', github.repository | toLower) }}
          flavor: |
            latest=false
          tags: |
            type=ref,event=tag           # v0.1 -> :v0.1
            type=ref,event=branch        # main -> :main
            type=sha,prefix=sha-         # :sha-<short>
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Login to GHCR
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push (tag-driven)
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}   # includes :v0.1 when you push tag v0.1
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            MODEL_VERSION=${{ startsWith(github.ref, 'refs/tags/') && github.ref_name || 'dev' }}
