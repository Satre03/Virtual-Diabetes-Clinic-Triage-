name: CI & Publish

on:
  push:
    branches: [main, master]
    tags: ['v*']          # <-- when you push a tag like v0.1, image will be :v0.1
  pull_request:

permissions:
  contents: read
  packages: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install & Test
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt pytest
          python src/train.py
          PYTHONPATH=$(pwd) pytest -q

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta (tags & labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ format('ghcr.io/{0}', toLower(github.repository)) }}
          flavor: |
            latest=false
          tags: |
            type=ref,event=tag           # => v0.1 -> :v0.1
            type=ref,event=branch        # => main -> :main (for branch pushes)
            type=sha,prefix=sha-         # => :sha-<short>
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build (load for smoke test, no push)
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true                     # produce a local docker image for run
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Smoke test
        shell: bash
        run: |
          set -euo pipefail
          # pick the first produced tag for local run
          IMG="$(echo "${{ steps.meta.outputs.tags }}" | head -n1)"
          CID=ci-smoke
          docker run -d --name "$CID" -p 8000:8000 "$IMG"
          trap 'docker logs "$CID" || true; docker rm -f "$CID" || true' EXIT
          for i in {1..30}; do
            if curl -fsS http://localhost:8000/health >/dev/null; then
              echo "Healthcheck OK"
              exit 0
            fi
            sleep 1
          done
          echo "Healthcheck failed"; exit 1

      - name: Login to GHCR
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push (uses cache; tags from meta)
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}     # includes :v0.1 when you push tag v0.1
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
