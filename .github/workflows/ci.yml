name: CI (Lint, Unit Test & Smoke Test)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  validate-code:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip' # cachear pip beroenden automatiskt baserat på requirements.txt

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest pytest-cov
          pip install -r requirements.txt

      # Strikt fel-lint (stoppar på allvarliga fel)
      - name: Lint with flake8 (style)
        run: flake8 src tests --max-line-length=120 --exit-zero


      # Stil-lint (rekommenderas för jämn kodstil)
      - name: Lint with flake8 (style)
        run: flake8 src tests --max-line-length=100

      # Om din träning genererar nödvändiga filer för testerna, kör den före pytest
      - name: Prepare for Unit Tests by running training
        run: |
          python src/train.py --version 0.1

      - name: Run Unit Tests with pytest (with coverage)
        env:
          PYTHONPATH: ${{ github.workspace }}  # Gör `src` importbart i testerna
        run: |
          pytest --cov=src --cov-report=xml

      - name: Upload Coverage Artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml

      - name: Run Training Smoke Test
        run: |
          {
            echo "--- Testing v0.1 training script ---"
            python src/train.py --version 0.1
            echo ""
            echo "--- Testing v0.2 training script ---"
            python src/train.py --version 0.2
          } > training_smoke_test_report.txt

      - name: Upload Smoke Test Report Artifact
        uses: actions/upload-artifact@v4
        with:
          name: smoke-test-report
          path: training_smoke_test_report.txt
